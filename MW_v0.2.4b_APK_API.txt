Intents listened for:

org.metawatch.manager.NOTIFICATION
  - Display a notification on the watch 
  
  "vibrate_on" - int // ms
  "vibrate_off" - int // ms
  "vibrate_cycles" - int 
	(optional - notification will display without vibration if omitted)

DIGITAL:
  "array" - int[96*96]
  or
  "buffer" - byte[96*96/8] // encoded buffer
  
OLED:
  "oled1"  - Displays large text on the top OLED.
  "oled1a" - Displays small text on the upper half of the top OLED 
  "oled1b" - Displays small text on the lower half of the top OLED 
  "oled2"  - Displays large text on the bottom OLED. 
  "oled2a" - Displays small text on the upper half of the bottom OLED 
  "oled2b" - Displays small text on the lower half of the bottom OLED  

DIGITAL and OLED (from rm14 onwards)
  "text" - Displays text on the watch.
  "title" (optional) - Title for the notification when using "text"
  "icon" (optional) - Icon for the notification. int[width*height]
  "iconWidth" (optional) - Width for the "icon" extra
  "iconHeight" (optional) - Height for the "icon" extra
  "sticky" (optional) - Whether the notification should be sticky (default is true)
  
-------------------------------------------------------------------------------

org.metawatch.manager.APPLICATION_UPDATE
  "array" - int[96*96]
  or
  "buffer" - byte[96*96/8] // encoded buffer

org.metawatch.manager.APPLICATION_START

org.metawatch.manager.APPLICATION_STOP

-------------------------------------------------------------------------------

org.metawatch.manager.VIBRATE
  - Vibrate the watch, but don't display anything
  
  "vibrate_on" - int // ms
  "vibrate_off" - int // ms
  "vibrate_cycles" - int 
  
-------------------------------------------------------------------------------

org.metawatch.manager.WIDGET_UPDATE
  - Update a widget's image from an external app
  - Note that a widget won't automatically be displayed - the user has to
    manually add it with the widget setup screen in MWM
    
  "id"       - Unique id for this widget - usually APPNAME_WIDTH_HEIGHT - e.g myApp_32_32
  "desc"     - Textual description of the widget - e.g. "My App (32x32)"
  "width"    - Width of the widget in pixels
  "height"   - height of the widget in pixels
  "priority" - priority of the widget (0 if no data, >0 otherwise) - bigger means less likely to be culled for space
  "array"    - pixel array : int[width*height]

-------------------------------------------------------------------------------  
  
org.metawatch.manager.SILENTMODE
  - Enable or disable silent mode from an external app
  "enabled"  - (boolean) - whether to enable to disable silent mode

===============================================================================

Broadcasted:

org.metawatch.manager.BUTTON_PRESS
  - When in application mode:
  "button" - byte
  "mode" - String // ("application", "idle")

-------------------------------------------------------------------------------

org.metawatch.manager.REFRESH_WIDGET_REQUEST
  - MWM requesting for external apps to refresh/announce any widgets
  
  "org.metawatch.manager.get_previews" 
      - Previews are being requested, so reply with a WIDGET_UPDATE for all possible
        widgets displaying a dummy image if necessary
or
  "org.metawatch.manager.widgets_desired"
      - ArrayList<String> of the widget ids requested by the user - reply with a 
        WIDGET_UPDATE if your widget_id is in the list
        
-------------------------------------------------------------------------------